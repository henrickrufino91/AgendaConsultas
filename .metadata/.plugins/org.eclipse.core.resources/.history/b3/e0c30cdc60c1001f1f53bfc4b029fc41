package br.com.projeto.clinica.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import br.com.projeto.clinica.model.Consultorio;
import br.com.projeto.clinica.model.Paciente;
import br.com.projeto.clinica.service.ConsultorioService;
import br.com.projeto.clinica.service.PacienteService;
import jakarta.validation.Valid;

@Controller
public class ConsultorioController {

	
	@Autowired
	private ConsultorioService consultorioService;
	
	
	@GetMapping("/novoConsultorio")
	public String novoConsultorio(Model model) {
		
		model.addAttribute("consultorio", new Consultorio());
		
		return "/consultorio/novoConsultorio";
	}
	
	
	@PostMapping("/salvarConsultorio")
	public String salvarConsultorio(@Valid Consultorio consultorio,Model model) {
		
		try {
			
			if (consultorio.getCodConsultorio() == null) {
				consultorioService.inserir(consultorio);
			} else {
				Consultorio consultorio2 = consultorioService.listarPorId(consultorio.getCodConsultorio());
				consultorio2.setNomeConsultorio(consultorio.getNomeConsultorio());
				
				consultorioService.inserir(consultorio2);
				
			}
			
			model.addAttribute("paciente", paciente);
						
			return "redirect:/paciente/novoPaciente";
			
		} catch (Exception e) {
			
			model.addAttribute("msg", "Erro ao inserir paciente!");
			
			return "redirect:/paciente/novoPaciente";
		}
		
	}
	
	
	@GetMapping("/removerPaciente")
    public String removerPaciente(@RequestParam Integer codigo){
        
		Paciente paciente = pacienteService.listarPorId(codigo);
		pacienteService.remover(paciente);
		
        return "redirect:/paciente/listarPacientes";
    }
	
	
	@GetMapping("/editarPaciente")
    public String editarPaciente(@RequestParam Integer codigo,Model model){
      
        Paciente paciente = pacienteService.listarPorId(codigo);
        model.addAttribute("paciente",  paciente);
               
        return "redirect:/paciente/editarPacientes";
   
    }
	
	
	@GetMapping(value = "/listarPacientes")
	public String listarPaciente(Paciente paciente,Model model) {
		
		model.addAttribute("paciente", paciente);
		model.addAttribute("listaPacientes", pacienteService.listarPacientes());
			
		return "/paciente/listarPacientes";
	}
	
	
}
